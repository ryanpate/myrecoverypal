# Generated by Django 5.2.4 on 2025-08-26 01:17

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('day', models.IntegerField(blank=True, choices=[(0, 'Sunday'), (1, 'Monday'), (2, 'Tuesday'), (3, 'Wednesday'), (4, 'Thursday'), (5, 'Friday'), (6, 'Saturday')], null=True)),
                ('time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('timezone', models.CharField(default='America/Chicago', max_length=50)),
                ('location', models.CharField(blank=True, max_length=255)),
                ('formatted_address', models.CharField(blank=True, max_length=500)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=2)),
                ('postal_code', models.CharField(blank=True, max_length=10)),
                ('country', models.CharField(default='US', max_length=2)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('group', models.CharField(blank=True, max_length=255)),
                ('group_notes', models.TextField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('mailing_address', models.CharField(blank=True, max_length=500)),
                ('conference_url', models.URLField(blank=True)),
                ('conference_url_notes', models.TextField(blank=True)),
                ('conference_phone', models.CharField(blank=True, max_length=30)),
                ('conference_phone_notes', models.TextField(blank=True)),
                ('attendance_option', models.CharField(choices=[('in_person', 'In-Person'), ('online', 'Online'), ('hybrid', 'Hybrid')], default='in_person', max_length=20)),
                ('types', models.JSONField(blank=True, default=list)),
                ('venmo', models.CharField(blank=True, max_length=50)),
                ('square', models.CharField(blank=True, max_length=50)),
                ('paypal', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_meetings', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_meetings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['day', 'time', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ServiceSubmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submission_type', models.CharField(choices=[('meeting', 'Meeting'), ('service', 'Support Service')], max_length=20)),
                ('submission_data', models.JSONField()),
                ('status', models.CharField(choices=[('pending', 'Pending Review'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('needs_info', 'Needs More Information')], default='pending', max_length=20)),
                ('review_notes', models.TextField(blank=True)),
                ('submitted_email', models.EmailField(blank=True, max_length=254)),
                ('submitted_phone', models.CharField(blank=True, max_length=20)),
                ('reviewed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_submissions', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='service_submissions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SupportService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_id', models.SlugField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('helpline', 'Helpline'), ('support_group', 'Support Group'), ('treatment_facility', 'Treatment Facility'), ('online_resource', 'Online Resource'), ('community_service', 'Community Service'), ('recovery_program', 'Recovery Program')], max_length=50)),
                ('category', models.CharField(choices=[('local', 'Local'), ('regional', 'Regional'), ('national', 'National'), ('online', 'Online')], max_length=20)),
                ('organization', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField()),
                ('phone', models.CharField(blank=True, max_length=30)),
                ('phone_display', models.CharField(blank=True, max_length=50)),
                ('text_support', models.CharField(blank=True, max_length=100)),
                ('chat_support', models.URLField(blank=True)),
                ('website', models.URLField(blank=True)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('address', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('state', models.CharField(blank=True, max_length=2)),
                ('postal_code', models.CharField(blank=True, max_length=10)),
                ('formatted_address', models.CharField(blank=True, max_length=500)),
                ('latitude', models.DecimalField(blank=True, decimal_places=8, max_digits=10, null=True)),
                ('longitude', models.DecimalField(blank=True, decimal_places=8, max_digits=11, null=True)),
                ('hours', models.CharField(blank=True, max_length=100)),
                ('languages', models.JSONField(blank=True, default=list)),
                ('services', models.JSONField(blank=True, default=list)),
                ('specializations', models.JSONField(blank=True, default=list)),
                ('insurance_accepted', models.JSONField(blank=True, default=list)),
                ('cost', models.CharField(choices=[('free', 'Free'), ('donation', 'Donation Based'), ('sliding_scale', 'Sliding Scale'), ('insurance', 'Insurance Accepted'), ('fee_required', 'Fee Required'), ('unknown', 'Unknown')], default='unknown', max_length=20)),
                ('formats', models.JSONField(blank=True, default=list)),
                ('meeting_finder', models.URLField(blank=True)),
                ('approach', models.TextField(blank=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='approved_services', to=settings.AUTH_USER_MODEL)),
                ('submitted_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='submitted_services', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['category', 'type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='UserBookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('meeting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='support_services.meeting')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='support_services.supportservice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='support_bookmarks', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['day', 'time'], name='support_ser_day_e45ae2_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['city', 'state'], name='support_ser_city_8d59b4_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['is_approved', 'is_active'], name='support_ser_is_appr_61f45a_idx'),
        ),
        migrations.AddIndex(
            model_name='supportservice',
            index=models.Index(fields=['type', 'category'], name='support_ser_type_8306cc_idx'),
        ),
        migrations.AddIndex(
            model_name='supportservice',
            index=models.Index(fields=['city', 'state'], name='support_ser_city_27c853_idx'),
        ),
        migrations.AddIndex(
            model_name='supportservice',
            index=models.Index(fields=['is_approved', 'is_active'], name='support_ser_is_appr_ef2f31_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userbookmark',
            unique_together={('user', 'meeting'), ('user', 'service')},
        ),
    ]
